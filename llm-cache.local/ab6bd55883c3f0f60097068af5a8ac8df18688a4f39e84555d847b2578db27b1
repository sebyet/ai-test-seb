{"text":"TypeScript offers a variety of basic types that help developers create more robust and maintainable code. Here are some of the fundamental types:\n\n1. **Number**: This type represents both integer and floating-point numbers. TypeScript uses the same number type as JavaScript, which is based on the IEEE 754 standard.\n\n   Example:\n   ```typescript\n   let age: number = 30;\n   let price: number = 19.99;\n   ```\n\n2. **String**: This type is used for textual data. Strings can be defined using single quotes, double quotes, or backticks for template literals.\n\n   Example:\n   ```typescript\n   let name: string = \"Alice\";\n   let greeting: string = `Hello, ${name}`;\n   ```\n\n3. **Boolean**: This type represents a logical value that can be either true or false.\n\n   Example:\n   ```typescript\n   let isActive: boolean = true;\n   ```\n\n4. **Array**: TypeScript allows you to define arrays of a specific type. You can use either the array type syntax or the generic array type.\n\n   Example:\n   ```typescript\n   let numbers: number[] = [1, 2, 3];\n   let fruits: Array<string> = [\"apple\", \"banana\", \"cherry\"];\n   ```\n\n5. **Tuple**: A tuple is a special type of array that allows you to define an array with fixed sizes and types for each element.\n\n   Example:\n   ```typescript\n   let person: [string, number] = [\"Bob\", 25];\n   ```\n\n6. **Enum**: Enums are a way to define a set of named constants. They can be numeric or string-based.\n\n   Example:\n   ```typescript\n   enum Color {\n       Red,\n       Green,\n       Blue\n   }\n   let c: Color = Color.Green;\n   ```\n\n7. **Any**: The `any` type allows you to opt-out of type checking. It can hold any value, but using it can lead to less type safety.\n\n   Example:\n   ```typescript\n   let randomValue: any = 42;\n   randomValue = \"Now I'm a string\";\n   ```\n\n8. **Void**: This type is used for functions that do not return a value.\n\n   Example:\n   ```typescript\n   function logMessage(message: string): void {\n       console.log(message);\n   }\n   ```\n\n9. **Null and Undefined**: These types represent the absence of a value. By default, `null` and `undefined` are subtypes of all other types.\n\n   Example:\n   ```typescript\n   let u: undefined = undefined;\n   let n: null = null;\n   ```\n\nUnderstanding these basic types is essential for leveraging TypeScript's capabilities to create type-safe applications.","finishReason":"stop","usage":{"promptTokens":76,"completionTokens":580},"rawCall":{"rawPrompt":[{"role":"system","content":"\n        You are a helpful social media assistant.\n        You will be asked to write a tweet on a given topic.\n        Return only the tweet.\n        Do not use emojis.\n        Do not use hashtags.\n        Use code examples if needed.\n      "},{"role":"user","content":"Write an article about TypeScript's basic types, like string and number."}],"rawSettings":{"model":"gpt-4o-mini","temperature":0}},"rawResponse":{"headers":{"access-control-expose-headers":"X-Request-ID","alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"8edaa4dbf8239212-MUC","connection":"keep-alive","content-encoding":"br","content-type":"application/json","date":"Fri, 06 Dec 2024 07:43:23 GMT","openai-organization":"user-1widx54uj9f1y5skrvldzboe","openai-processing-ms":"7862","openai-version":"2020-10-01","server":"cloudflare","set-cookie":"_cfuvid=mz7m2uXqo12HKbUuH3uldLmdxitQpNYmvWuJaRBZ0xA-1733471003866-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None","strict-transport-security":"max-age=31536000; includeSubDomains; preload","transfer-encoding":"chunked","x-content-type-options":"nosniff","x-ratelimit-limit-requests":"10000","x-ratelimit-limit-tokens":"200000","x-ratelimit-remaining-requests":"9998","x-ratelimit-remaining-tokens":"199821","x-ratelimit-reset-requests":"17.276s","x-ratelimit-reset-tokens":"53ms","x-request-id":"req_9837d36f86dce045fed289875a4c42fc"}},"request":{"body":"{\"model\":\"gpt-4o-mini\",\"temperature\":0,\"messages\":[{\"role\":\"system\",\"content\":\"\\n        You are a helpful social media assistant.\\n        You will be asked to write a tweet on a given topic.\\n        Return only the tweet.\\n        Do not use emojis.\\n        Do not use hashtags.\\n        Use code examples if needed.\\n      \"},{\"role\":\"user\",\"content\":\"Write an article about TypeScript's basic types, like string and number.\"}]}"},"response":{"id":"chatcmpl-AbNHY7e9WvdzUacjV22On1ktQwK2T","modelId":"gpt-4o-mini-2024-07-18","timestamp":"2024-12-06T07:43:16.000Z"},"warnings":[],"providerMetadata":{"openai":{"reasoningTokens":0,"cachedPromptTokens":0}}}